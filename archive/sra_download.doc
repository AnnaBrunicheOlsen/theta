Downloading SRA data
 
Step-1: Download the SRA files 
 

This document outlines the steps that can be taken to download Sequence Read Archive (SRA) files. The code listed below are demonstrated using my (Andrew Black’s) scratch space and paths. You will need to modify these accordingly. 
While you can download SRA files by submitting a job, which makes more sense if downloading a lot of files, we will be doing this logged into an interactive session:
```
sinteractive -A standby -t 4:00:00 -n 6
```

Now, we need to load two modules:
```
ml bioinfo sra-toolkit/2.10.0
```
The next step is to set the path to where you want to store the temporary (large) sequence read archive files. By default, these go into your home directory, and they can quickly use up all of your home directory space. Therefore, we want to specify a location to store them that is on your scratch drive (as you have terabytes of free space here!)
The location that you will want to specify (to store these SRA files) is here:
```
/scratch/snyder/b/blackan/
```
Now that we have determined the path to where you will want to save these files, copy the path above. Once copied, run the following command: 
```
vdb-config -i --interactive-mode textual
```
This interactive session will ask you to specify some options. 
Type 4, and then paste the path that you previously copied above and hit <ENTER>.
After you input this information Type Y and <ENTER>.

Next, we’ll need to download the SRA accession(s) that you are interested in.

Copy the list of SRR accessions you are interested into a file called species_x_srr.txt 

Let’s put this file at the following path:
```
species_x/sra/species_x_srr.txt 
```
This file should look something like this:
```
cat species_x/sra/species_x_srr.txt 

SRR6656231
SRR6656187
SRR6656230
SRR6656186
SRR6656233
SRR6656185
. . .
```
Now that we have the text file created, we need to use the “prefetch command” which will download the SRR accessions to the computing infrastructure. 
Now, you should navigate to the folder that contains the species_x_srr.txt  file, and type this command:
```
cat test_srr.txt | xargs prefetch --max-size 200GB
```


This will feed the accessions to the prefetch command, which will result in the raw sequences being downloaded from NCBI’s servers. You should see some progress messages as the files download.

 
Step-2: Create the paired FASTQ files
 
Now that the SRA files should be downloaded to your scratch drive, we can extract the paired FASTQ files from the raw prefetched data. At this point it’s important to note what type of reads you are expecting. You’ll have to ensure that you get paired end reads from the SRA accessions where they are expected. The newer program called fasterq-dump appears to be aware of paired-end datasets, and splits them accordingly by default. 
Move into the directory containing all of the downloaded SRR files:
```
/scratch/snyder/b/blackan/sra
```
And run the following command to extract the paired end FASTQ data from each accession. 

```
ls -1 | xargs -I'{}' fasterq-dump -t /scratch/snyder/b/blackan/ -e 6 {}
```

By default, fasterq-dump uses 6 threads, but you can specify a different amount using the -e flag.

Using the -I'{}' flag of xargs, your accessions will be extracted serially, which is what we want in this case, in order to reduce the load on the server.
Note, you may need to increase the max limit size of the fastq files (20GB by default), depending on the size of your files. 

Now, you should be able to ls and see your brand new fastq files named with the SRRXXXXX_1.fastq for single end data, and SRRXXXXX_2.fastq for paired end data. 
```
ls /scratch/snyder/b/blackan/sra/*fastq
SRR6656140.sra_1.fastq  SRR6656155.sra_1.fastq  SRR6656170.sra_1.fastq  SRR6656185.sra_1.fastq  SRR6656200.sra_1.fastq
```
#DONE

